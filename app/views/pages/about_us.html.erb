
    <h1>Go Agile!</h1>

    <h3>Agile software development is a group of software development methods based on iterative and incremental
      development, where requirements and solutions evolve through collaboration between self-organizing,
      cross-functional teams. It promotes adaptive planning, evolutionary development and delivery, a time-boxed
      iterative approach, and encourages rapid and flexible response to change. It is a conceptual framework that
      promotes foreseen tight interactions throughout the development cycle.</h3>

    <p>
      In February 2001, 17 software developers met at the Snowbird, Utah resort, to discuss lightweight development
      methods. They published the Manifesto for Agile Software Development to define the approach now known as agile
      software development. Some of the manifesto's authors formed the Agile Alliance, a non-profit organization that
      promotes software development according to the manifesto's values and principles.
    </p>
    <blockquote>
      <h2>The Agile Manifesto</h2>
      We are uncovering better ways of developing software by doing it and helping others do it.
      <br/>Through this work we have come to value:
      <ul>
        <li>Individuals and interactions over Processes and tools</li>
        <li>Working software over Comprehensive documentation</li>
        <li>Customer collaboration over Contract negotiation</li>
        <li>Responding to change over Following a plan</li>
        <li>That is, while there is value in the items on the right, we value the items on the left more.</li>
      </ul>
    </blockquote>

    <h2>
      Agile principles</h2>
    <p>The Agile Manifesto is based on twelve principles:
    <ul>
      <li>Customer satisfaction by rapid delivery of useful software
      <li>Welcome changing requirements, even late in development
      <li>Working software is delivered frequently (weeks rather than months)
      <li>Working software is the principal measure of progress
      <li>Sustainable development, able to maintain a constant pace
      <li>Close, daily cooperation between business people and developers
      <li>Face-to-face conversation is the best form of communication (co-location)
      <li>Projects are built around motivated individuals, who should be trusted
      <li>Continuous attention to technical excellence and good design
      <li>Simplicity—the art of maximizing the amount of work not done—is essential
      <li>Self-organizing teams
      <li>Regular adaptation to changing circumstances
    </ul>

    </p>





